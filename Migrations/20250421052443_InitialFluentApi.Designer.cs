// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_net.app.models;

#nullable disable

namespace backend_net.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20250421052443_InitialFluentApi")]
    partial class InitialFluentApi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("backend_net.app.models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias", (string)null);

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Nombre = "Camisas"
                        },
                        new
                        {
                            IdCategoria = 2,
                            Nombre = "Pantalones"
                        },
                        new
                        {
                            IdCategoria = 3,
                            Nombre = "Chaquetas"
                        },
                        new
                        {
                            IdCategoria = 4,
                            Nombre = "Zapatos"
                        },
                        new
                        {
                            IdCategoria = 5,
                            Nombre = "Accesorios"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("char(8)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            IdCliente = 1,
                            Apellido = "Perez",
                            DNI = "74162314",
                            Direccion = "Av. Juan Perez 123",
                            Email = "jose@gmail.com",
                            Nombre = "Juan",
                            Telefono = "123456789"
                        },
                        new
                        {
                            IdCliente = 2,
                            Apellido = "Lopez",
                            DNI = "52462314",
                            Direccion = "Av. Maria Lopez 123",
                            Email = "maria@gmail.com",
                            Nombre = "Maria",
                            Telefono = "987654321"
                        },
                        new
                        {
                            IdCliente = 3,
                            Apellido = "Rodriguez",
                            DNI = "14762314",
                            Direccion = "Av. Pedro Rodriguez 123",
                            Email = "pedro@gmail.com",
                            Nombre = "Pedro",
                            Telefono = "456789123"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Contacto", b =>
                {
                    b.Property<int>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdContacto"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.HasKey("IdContacto");

                    b.ToTable("Contactos", (string)null);

                    b.HasData(
                        new
                        {
                            IdContacto = 1,
                            Apellido = "Pari",
                            Email = "rosa@gmail.com",
                            Mensaje = "Hola, tengo una consulta sobre un producto",
                            Nombre = "Rosa",
                            Telefono = "985632147"
                        },
                        new
                        {
                            IdContacto = 2,
                            Apellido = "Rodriguez",
                            Email = "pedro@gmail.com",
                            Mensaje = "Hola, tengo una consulta sobre un producto",
                            Nombre = "Pedro",
                            Telefono = "456789123"
                        },
                        new
                        {
                            IdContacto = 3,
                            Apellido = "Lopez",
                            Email = "maria@gmail.com",
                            Mensaje = "Hola, tengo una consulta sobre un producto",
                            Nombre = "Maria",
                            Telefono = "987654321"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.DetalleEntrada", b =>
                {
                    b.Property<int>("IdDetalleEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleEntrada"));

                    b.Property<float>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("IdEntrada")
                        .HasColumnType("int");

                    b.Property<int>("IdPrenda")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalleEntrada");

                    b.HasIndex("IdEntrada");

                    b.HasIndex("IdPrenda");

                    b.ToTable("DetallesEntradas", (string)null);

                    b.HasData(
                        new
                        {
                            IdDetalleEntrada = 1,
                            Cantidad = 30f,
                            IdEntrada = 1,
                            IdPrenda = 1,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 2,
                            Cantidad = 10f,
                            IdEntrada = 1,
                            IdPrenda = 2,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 3,
                            Cantidad = 10f,
                            IdEntrada = 1,
                            IdPrenda = 3,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 4,
                            Cantidad = 20f,
                            IdEntrada = 2,
                            IdPrenda = 4,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 5,
                            Cantidad = 10f,
                            IdEntrada = 2,
                            IdPrenda = 5,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 6,
                            Cantidad = 10f,
                            IdEntrada = 2,
                            IdPrenda = 6,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 7,
                            Cantidad = 22f,
                            IdEntrada = 2,
                            IdPrenda = 7,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 8,
                            Cantidad = 20f,
                            IdEntrada = 3,
                            IdPrenda = 8,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 9,
                            Cantidad = 11f,
                            IdEntrada = 3,
                            IdPrenda = 9,
                            PrecioCompra = 100m
                        },
                        new
                        {
                            IdDetalleEntrada = 10,
                            Cantidad = 8f,
                            IdEntrada = 3,
                            IdPrenda = 10,
                            PrecioCompra = 100m
                        });
                });

            modelBuilder.Entity("backend_net.app.models.DetallePedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetallePedido"));

                    b.Property<float>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("IdPedidoProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdPrenda")
                        .HasColumnType("int");

                    b.HasKey("IdDetallePedido");

                    b.HasIndex("IdPedidoProveedor");

                    b.HasIndex("IdPrenda");

                    b.ToTable("DetallesPedidos", (string)null);

                    b.HasData(
                        new
                        {
                            IdDetallePedido = 1,
                            Cantidad = 30f,
                            IdPedidoProveedor = 1,
                            IdPrenda = 1
                        },
                        new
                        {
                            IdDetallePedido = 2,
                            Cantidad = 10f,
                            IdPedidoProveedor = 1,
                            IdPrenda = 2
                        },
                        new
                        {
                            IdDetallePedido = 3,
                            Cantidad = 10f,
                            IdPedidoProveedor = 1,
                            IdPrenda = 3
                        },
                        new
                        {
                            IdDetallePedido = 4,
                            Cantidad = 20f,
                            IdPedidoProveedor = 2,
                            IdPrenda = 4
                        },
                        new
                        {
                            IdDetallePedido = 5,
                            Cantidad = 10f,
                            IdPedidoProveedor = 2,
                            IdPrenda = 5
                        },
                        new
                        {
                            IdDetallePedido = 6,
                            Cantidad = 10f,
                            IdPedidoProveedor = 2,
                            IdPrenda = 6
                        },
                        new
                        {
                            IdDetallePedido = 7,
                            Cantidad = 22f,
                            IdPedidoProveedor = 2,
                            IdPrenda = 7
                        },
                        new
                        {
                            IdDetallePedido = 8,
                            Cantidad = 20f,
                            IdPedidoProveedor = 3,
                            IdPrenda = 8
                        },
                        new
                        {
                            IdDetallePedido = 9,
                            Cantidad = 11f,
                            IdPedidoProveedor = 3,
                            IdPrenda = 9
                        },
                        new
                        {
                            IdDetallePedido = 10,
                            Cantidad = 8f,
                            IdPedidoProveedor = 3,
                            IdPrenda = 10
                        });
                });

            modelBuilder.Entity("backend_net.app.models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<float>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("IdPrenda")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioVentaReal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalleVenta");

                    b.HasIndex("IdPrenda");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetallesVentas", (string)null);

                    b.HasData(
                        new
                        {
                            IdDetalleVenta = 1,
                            Cantidad = 30f,
                            IdPrenda = 1,
                            IdVenta = 1,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 2,
                            Cantidad = 10f,
                            IdPrenda = 2,
                            IdVenta = 1,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 3,
                            Cantidad = 10f,
                            IdPrenda = 3,
                            IdVenta = 1,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 4,
                            Cantidad = 20f,
                            IdPrenda = 4,
                            IdVenta = 2,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 5,
                            Cantidad = 10f,
                            IdPrenda = 5,
                            IdVenta = 2,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 6,
                            Cantidad = 10f,
                            IdPrenda = 6,
                            IdVenta = 2,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 7,
                            Cantidad = 22f,
                            IdPrenda = 7,
                            IdVenta = 2,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 8,
                            Cantidad = 20f,
                            IdPrenda = 8,
                            IdVenta = 3,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 9,
                            Cantidad = 11f,
                            IdPrenda = 9,
                            IdVenta = 3,
                            PrecioVentaReal = 100m
                        },
                        new
                        {
                            IdDetalleVenta = 10,
                            Cantidad = 8f,
                            IdPrenda = 10,
                            IdVenta = 3,
                            PrecioVentaReal = 100m
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("char(8)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("ImagenPerfil")
                        .HasColumnType("text");

                    b.Property<string>("ImagenPerfilUrl")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Empleados", (string)null);

                    b.HasData(
                        new
                        {
                            IdEmpleado = 1,
                            Apellido = "Perez",
                            DNI = "23456789",
                            Direccion = "Av. Juan Perez 123",
                            Email = "jose@gmail.com",
                            IdRol = 1,
                            IdUser = 1,
                            Nombre = "Juan",
                            Telefono = "123456789"
                        },
                        new
                        {
                            IdEmpleado = 2,
                            Apellido = "Lopez",
                            DNI = "87654321",
                            Direccion = "Av. Maria Lopez 123",
                            Email = "maria@gmail.com",
                            IdRol = 1,
                            IdUser = 2,
                            Nombre = "Maria",
                            Telefono = "987654321"
                        },
                        new
                        {
                            IdEmpleado = 3,
                            Apellido = "Rodriguez",
                            DNI = "45789123",
                            Direccion = "Av. Pedro Rodriguez 123",
                            Email = "pedro@gmail.com",
                            IdRol = 1,
                            IdUser = 3,
                            Nombre = "Pedro",
                            Telefono = "456789123"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Entrada", b =>
                {
                    b.Property<int>("IdEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEntrada"));

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdEntrada");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Entradas", (string)null);

                    b.HasData(
                        new
                        {
                            IdEntrada = 1,
                            FechaEntrada = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 1
                        },
                        new
                        {
                            IdEntrada = 2,
                            FechaEntrada = new DateTime(2024, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 2
                        },
                        new
                        {
                            IdEntrada = 3,
                            FechaEntrada = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 3
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marcas", (string)null);

                    b.HasData(
                        new
                        {
                            IdMarca = 1,
                            Nombre = "Nike"
                        },
                        new
                        {
                            IdMarca = 2,
                            Nombre = "Reebok"
                        },
                        new
                        {
                            IdMarca = 3,
                            Nombre = "Adidas"
                        },
                        new
                        {
                            IdMarca = 4,
                            Nombre = "Puma"
                        },
                        new
                        {
                            IdMarca = 5,
                            Nombre = "Element"
                        },
                        new
                        {
                            IdMarca = 6,
                            Nombre = "Vans"
                        },
                        new
                        {
                            IdMarca = 7,
                            Nombre = "Converse"
                        },
                        new
                        {
                            IdMarca = 8,
                            Nombre = "Fila"
                        },
                        new
                        {
                            IdMarca = 9,
                            Nombre = "Nike"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.PedidoProveedor", b =>
                {
                    b.Property<int>("IdPedidoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPedidoProveedor"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("ENUM('Pendiente', 'Enviado', 'Recibido', 'Anulado')")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdPedidoProveedor");

                    b.HasIndex("IdProveedor");

                    b.ToTable("PedidosProveedores", (string)null);

                    b.HasData(
                        new
                        {
                            IdPedidoProveedor = 1,
                            Estado = "Pendiente",
                            FechaPedido = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 1
                        },
                        new
                        {
                            IdPedidoProveedor = 2,
                            Estado = "Pendiente",
                            FechaPedido = new DateTime(2024, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 2
                        },
                        new
                        {
                            IdPedidoProveedor = 3,
                            Estado = "Recibido",
                            FechaPedido = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 3
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Prenda", b =>
                {
                    b.Property<int>("IdPrenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPrenda"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdTalla")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("IdPrenda");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdTalla");

                    b.ToTable("Prendas", (string)null);

                    b.HasData(
                        new
                        {
                            IdPrenda = 1,
                            Color = "Negro",
                            Descripcion = "Camisa de Jean para varón",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Camisa Jean",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 2,
                            Color = "Negro",
                            Descripcion = "Camiseta de Jean para varón",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Camiseta Jean",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 3,
                            Color = "Negro",
                            Descripcion = "Casaca de Jean Oversize",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Casaca Jean",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 4,
                            Color = "Negro",
                            Descripcion = "Pantalon exacto para hombre",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Pantalon exacto",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 5,
                            Color = "Negro",
                            Descripcion = "Camisa Elegante para Hombre",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Camisa Elegante",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 6,
                            Color = "Negro",
                            Descripcion = "Zapatos de vestir para hombre",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Zapatos de Vestir",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 7,
                            Color = "Negro",
                            Descripcion = "Zapatillas Adidas para hombre",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Zapatillas Adidas",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 8,
                            Color = "Negro",
                            Descripcion = "Polo de estampado para hombre",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Polo Estampado",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 9,
                            Color = "Negro",
                            Descripcion = "Polo de oversize para hombre",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Polo Oversize",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 10,
                            Color = "Negro",
                            Descripcion = "Camiseta de Maria para varón",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Camiseta Maria",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 11,
                            Color = "Negro",
                            Descripcion = "Chompa abrigadora para hombre",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Chompa Abrigadora",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 12,
                            Color = "Negro",
                            Descripcion = "Pantalon para pedir peticiones",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Pantalon Axios",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            IdPrenda = 13,
                            Color = "Negro",
                            Descripcion = "Pantalon comodo para hombre",
                            IdCategoria = 3,
                            IdMarca = 2,
                            IdProveedor = 1,
                            IdTalla = 2,
                            Nombre = "Pantalon Dress",
                            Precio = 100m,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("char(8)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedores", (string)null);

                    b.HasData(
                        new
                        {
                            IdProveedor = 1,
                            Apellido = "Perez",
                            DNI = "23456789",
                            Direccion = "Av. Juan Perez 123",
                            Email = "jose@gmail.com",
                            Nombre = "Juan",
                            Telefono = "123456789"
                        },
                        new
                        {
                            IdProveedor = 2,
                            Apellido = "Lopez",
                            DNI = "87654321",
                            Direccion = "Av. Maria Lopez 123",
                            Email = "maria@gmail.com",
                            Nombre = "Maria",
                            Telefono = "987654321"
                        },
                        new
                        {
                            IdProveedor = 3,
                            Apellido = "Rodriguez",
                            DNI = "45689123",
                            Direccion = "Av. Pedro Rodriguez 123",
                            Email = "pedro@gmail.com",
                            Nombre = "Pedro",
                            Telefono = "456789123"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Reclamacion", b =>
                {
                    b.Property<int>("IdReclamacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdReclamacion"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaIncidente")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2025, 4, 21, 0, 24, 43, 52, DateTimeKind.Local).AddTicks(9267));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("ENUM('DNI', 'RUC', 'Pasaporte')");

                    b.HasKey("IdReclamacion");

                    b.ToTable("Reclamaciones", (string)null);

                    b.HasData(
                        new
                        {
                            IdReclamacion = 1,
                            Apellido = "García",
                            Ciudad = "Lima",
                            Direccion = "Av. Primavera 123",
                            Distrito = "Miraflores",
                            Email = "carlos@gmail.com",
                            FechaIncidente = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2025, 4, 21, 0, 24, 43, 420, DateTimeKind.Local).AddTicks(8176),
                            Nombre = "Carlos",
                            NumeroDocumento = "12345678",
                            Telefono = "987654321",
                            TipoDocumento = "DNI"
                        },
                        new
                        {
                            IdReclamacion = 2,
                            Apellido = "Sánchez",
                            Ciudad = "Arequipa",
                            Direccion = "Jr. Los Álamos 456",
                            Distrito = "Cercado",
                            Email = "ana.sanchez@gmail.com",
                            FechaIncidente = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2025, 4, 21, 0, 24, 43, 420, DateTimeKind.Local).AddTicks(8195),
                            Nombre = "Ana",
                            NumeroDocumento = "20123456789",
                            Telefono = "923456789",
                            TipoDocumento = "RUC"
                        },
                        new
                        {
                            IdReclamacion = 3,
                            Apellido = "Torres",
                            Ciudad = "Cusco",
                            Direccion = "Calle Las Flores 789",
                            Distrito = "Wanchaq",
                            Email = "luis.torres@gmail.com",
                            FechaIncidente = new DateTime(2024, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2025, 4, 21, 0, 24, 43, 420, DateTimeKind.Local).AddTicks(8198),
                            Nombre = "Luis",
                            NumeroDocumento = "P1234567",
                            Telefono = "956321478",
                            TipoDocumento = "Pasaporte"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            IdRol = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            IdRol = 2,
                            Nombre = "Usuario"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Talla", b =>
                {
                    b.Property<int>("IdTalla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTalla"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTalla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTalla");

                    b.ToTable("Tallas", (string)null);

                    b.HasData(
                        new
                        {
                            IdTalla = 1,
                            Descripcion = "Talla Small",
                            NombreTalla = "S"
                        },
                        new
                        {
                            IdTalla = 2,
                            Descripcion = "Talla Medium",
                            NombreTalla = "M"
                        },
                        new
                        {
                            IdTalla = 3,
                            Descripcion = "Tala Large",
                            NombreTalla = "L"
                        },
                        new
                        {
                            IdTalla = 4,
                            Descripcion = "Talla Extra Large",
                            NombreTalla = "XL"
                        },
                        new
                        {
                            IdTalla = 5,
                            Descripcion = "Talla Extra Extra Large",
                            NombreTalla = "XXL"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.HasKey("IdUser");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            Email = "jose@gmail.com",
                            Nombre = "Juan",
                            Password = "$2a$11$wp6DrvzhwfHsk1kNjsgRIedUqgnsphHdpA0A6pb5C06sYWtbPPkn2"
                        },
                        new
                        {
                            IdUser = 2,
                            Email = "maria@gmail.com",
                            Nombre = "Maria",
                            Password = "$2a$11$mVzTBQzYKJVc.M5c.GNOUuG5OTowNSq9JKPdhFk4HEiZucIHHdcEK"
                        },
                        new
                        {
                            IdUser = 3,
                            Email = "pedro@gmail.com",
                            Nombre = "Pedro",
                            Password = "$2a$11$.pIaJC48JES/9F.UvsMSCO/.EV2NXIpGlXgwtdSVb.jiEmTSeOAYW"
                        });
                });

            modelBuilder.Entity("backend_net.app.models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("DireccionVenta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IDCliente")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("IdVenta");

                    b.HasIndex("IDCliente");

                    b.ToTable("Ventas", (string)null);

                    b.HasData(
                        new
                        {
                            IdVenta = 1,
                            DireccionVenta = "Av. Juan Perez 123",
                            FechaVenta = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IDCliente = 1,
                            MetodoPago = "Efectivo",
                            Total = 100m
                        },
                        new
                        {
                            IdVenta = 2,
                            DireccionVenta = "Av. Maria Lopez 123",
                            FechaVenta = new DateTime(2024, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IDCliente = 2,
                            MetodoPago = "Tarjeta de Crédito",
                            Total = 100m
                        },
                        new
                        {
                            IdVenta = 3,
                            DireccionVenta = "Av. Pedro Rodriguez 123",
                            FechaVenta = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IDCliente = 3,
                            MetodoPago = "Efectivo",
                            Total = 100m
                        });
                });

            modelBuilder.Entity("backend_net.app.models.DetalleEntrada", b =>
                {
                    b.HasOne("backend_net.app.models.Entrada", "Entrada")
                        .WithMany("DetallesEntradas")
                        .HasForeignKey("IdEntrada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Prenda", "Prenda")
                        .WithMany("DetallesEntradas")
                        .HasForeignKey("IdPrenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrada");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("backend_net.app.models.DetallePedido", b =>
                {
                    b.HasOne("backend_net.app.models.PedidoProveedor", "PedidoProveedor")
                        .WithMany("DetallesPedidos")
                        .HasForeignKey("IdPedidoProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Prenda", "Prenda")
                        .WithMany("DetallesPedidos")
                        .HasForeignKey("IdPrenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoProveedor");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("backend_net.app.models.DetalleVenta", b =>
                {
                    b.HasOne("backend_net.app.models.Prenda", "Prenda")
                        .WithMany("DetallesVentas")
                        .HasForeignKey("IdPrenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Venta", "Venta")
                        .WithMany("DetallesVentas")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prenda");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("backend_net.app.models.Empleado", b =>
                {
                    b.HasOne("backend_net.app.models.Rol", "Rol")
                        .WithMany("Empleados")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.User", "User")
                        .WithOne("Empleado")
                        .HasForeignKey("backend_net.app.models.Empleado", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend_net.app.models.Entrada", b =>
                {
                    b.HasOne("backend_net.app.models.Proveedor", "Proveedor")
                        .WithMany("Entradas")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("backend_net.app.models.PedidoProveedor", b =>
                {
                    b.HasOne("backend_net.app.models.Proveedor", "Proveedor")
                        .WithMany("PedidosProveedor")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("backend_net.app.models.Prenda", b =>
                {
                    b.HasOne("backend_net.app.models.Categoria", "Categoria")
                        .WithMany("Prendas")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Marca", "Marca")
                        .WithMany("Prendas")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Proveedor", "Proveedor")
                        .WithMany("Prendas")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Talla", "Talla")
                        .WithMany("Prendas")
                        .HasForeignKey("IdTalla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Proveedor");

                    b.Navigation("Talla");
                });

            modelBuilder.Entity("backend_net.app.models.Venta", b =>
                {
                    b.HasOne("backend_net.app.models.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("backend_net.app.models.Categoria", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("backend_net.app.models.Entrada", b =>
                {
                    b.Navigation("DetallesEntradas");
                });

            modelBuilder.Entity("backend_net.app.models.Marca", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.PedidoProveedor", b =>
                {
                    b.Navigation("DetallesPedidos");
                });

            modelBuilder.Entity("backend_net.app.models.Prenda", b =>
                {
                    b.Navigation("DetallesEntradas");

                    b.Navigation("DetallesPedidos");

                    b.Navigation("DetallesVentas");
                });

            modelBuilder.Entity("backend_net.app.models.Proveedor", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("PedidosProveedor");

                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.Rol", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("backend_net.app.models.Talla", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.User", b =>
                {
                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("backend_net.app.models.Venta", b =>
                {
                    b.Navigation("DetallesVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
