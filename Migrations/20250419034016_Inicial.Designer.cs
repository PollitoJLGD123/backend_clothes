// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_net.app.models;

#nullable disable

namespace backend_net.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250419034016_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("backend_net.app.models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("backend_net.app.models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("char(8)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("backend_net.app.models.Contacto", b =>
                {
                    b.Property<int>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdContacto"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.HasKey("IdContacto");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("backend_net.app.models.DetalleEntrada", b =>
                {
                    b.Property<int>("IdDetalleEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleEntrada"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdEntrada")
                        .HasColumnType("int");

                    b.Property<int>("IdPrenda")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalleEntrada");

                    b.HasIndex("IdEntrada");

                    b.HasIndex("IdPrenda");

                    b.ToTable("Detalles_Entradas");
                });

            modelBuilder.Entity("backend_net.app.models.DetallePedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetallePedido"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdPedidoProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdPrenda")
                        .HasColumnType("int");

                    b.HasKey("IdDetallePedido");

                    b.HasIndex("IdPedidoProveedor");

                    b.HasIndex("IdPrenda");

                    b.ToTable("Detalles_Pedidos");
                });

            modelBuilder.Entity("backend_net.app.models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdPrenda")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioVentaReal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalleVenta");

                    b.HasIndex("IdPrenda");

                    b.HasIndex("IdVenta");

                    b.ToTable("Detalles_Ventas");
                });

            modelBuilder.Entity("backend_net.app.models.Entrada", b =>
                {
                    b.Property<int>("IdEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEntrada"));

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdEntrada");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("backend_net.app.models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("backend_net.app.models.PedidoProveedor", b =>
                {
                    b.Property<int>("IdPedidoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPedidoProveedor"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdPedidoProveedor");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Pedidos_Proveedores");
                });

            modelBuilder.Entity("backend_net.app.models.Prenda", b =>
                {
                    b.Property<int>("IdPrenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPrenda"));

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdTalla")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdPrenda");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdTalla");

                    b.ToTable("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("char(8)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("backend_net.app.models.Reclamacion", b =>
                {
                    b.Property<int>("IdReclamacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdReclamacion"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaIncidente")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("char(9)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("ENUM('DNI', 'RUC', 'Pasaporte')");

                    b.HasKey("IdReclamacion");

                    b.ToTable("Reclamaciones");
                });

            modelBuilder.Entity("backend_net.app.models.Talla", b =>
                {
                    b.Property<int>("IdTalla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTalla"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTalla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTalla");

                    b.ToTable("Tallas");
                });

            modelBuilder.Entity("backend_net.app.models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("DireccionVenta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime");

                    b.Property<int>("IDCliente")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdVenta");

                    b.HasIndex("IDCliente");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("backend_net.app.models.DetalleEntrada", b =>
                {
                    b.HasOne("backend_net.app.models.Entrada", "Entrada")
                        .WithMany("DetallesEntrada")
                        .HasForeignKey("IdEntrada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Prenda", "Prenda")
                        .WithMany("DetallesEntradas")
                        .HasForeignKey("IdPrenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrada");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("backend_net.app.models.DetallePedido", b =>
                {
                    b.HasOne("backend_net.app.models.PedidoProveedor", "PedidoProveedor")
                        .WithMany("DetallesPedidos")
                        .HasForeignKey("IdPedidoProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Prenda", "Prenda")
                        .WithMany("DetallesPedidos")
                        .HasForeignKey("IdPrenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoProveedor");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("backend_net.app.models.DetalleVenta", b =>
                {
                    b.HasOne("backend_net.app.models.Prenda", "Prenda")
                        .WithMany()
                        .HasForeignKey("IdPrenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Venta", "Venta")
                        .WithMany("DetallesVenta")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prenda");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("backend_net.app.models.Entrada", b =>
                {
                    b.HasOne("backend_net.app.models.Proveedor", "Proveedor")
                        .WithMany("Entradas")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("backend_net.app.models.PedidoProveedor", b =>
                {
                    b.HasOne("backend_net.app.models.Proveedor", "Proveedor")
                        .WithMany("PedidosProveedor")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("backend_net.app.models.Prenda", b =>
                {
                    b.HasOne("backend_net.app.models.Categoria", "Categoria")
                        .WithMany("Prendas")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Marca", "Marca")
                        .WithMany("Prendas")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Proveedor", "Proveedor")
                        .WithMany("Prendas")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_net.app.models.Talla", "Talla")
                        .WithMany("Prendas")
                        .HasForeignKey("IdTalla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Proveedor");

                    b.Navigation("Talla");
                });

            modelBuilder.Entity("backend_net.app.models.Venta", b =>
                {
                    b.HasOne("backend_net.app.models.Cliente", "Cliente")
                        .WithMany("Prendas")
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("backend_net.app.models.Categoria", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.Cliente", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.Entrada", b =>
                {
                    b.Navigation("DetallesEntrada");
                });

            modelBuilder.Entity("backend_net.app.models.Marca", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.PedidoProveedor", b =>
                {
                    b.Navigation("DetallesPedidos");
                });

            modelBuilder.Entity("backend_net.app.models.Prenda", b =>
                {
                    b.Navigation("DetallesEntradas");

                    b.Navigation("DetallesPedidos");
                });

            modelBuilder.Entity("backend_net.app.models.Proveedor", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("PedidosProveedor");

                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.Talla", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("backend_net.app.models.Venta", b =>
                {
                    b.Navigation("DetallesVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
